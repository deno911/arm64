name: Compile Deno

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: Version
        required: true

jobs:
  metadata:
    name: Get Release Upload Metadata
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_upload.outputs.version }}
      upload_url: ${{ steps.get_upload.outputs.upload_url }}
      prerelease: ${{ steps.get_upload.outputs.prerelease }}
    steps:
      - id: get_upload
        run: |
          export VERSION="${{ github.event.inputs.version || github.ref }}"
          VERSION="${VERSION#refs/tags/}"
          response=$(curl -s -H "Accept: application/json" https://api.github.com/repos/deno911/arm64/releases)
          release=$(echo $response | jq ".[]|select(.tag_name==\"${VERSION}\")")

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "upload_url=$(echo $release | jq -r ".upload_url")" >> $GITHUB_OUTPUT
          echo "prerelease=$(echo $release | jq -r ".prerelease")" >> $GITHUB_OUTPUT
  compile:
    runs-on:
      - macos-latest
      - buildjet-16vcpu-ubuntu-2204-arm
    needs: metadata
    name: "Compile"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Compile Deno
        shell: bash
        run: |
          echo "::echo::on"
          echo "Compiling Deno version ${{ needs.metadata.outputs.version }}"
          docker build -t deno-build --build-arg DENO_VERSION="${{ needs.metadata.outputs.version }}" --file ./Dockerfile.compile .
          echo "Extracting compiled deno binary to $(pwd)"
          CONTAINER_ID="$(docker create deno-build)"
          docker cp "${CONTAINER_ID}:/deno/target/release/deno" .
          docker rm "${CONTAINER_ID}"
          zip deno-linux-arm64.zip ./deno
      - name: Upload Release Asset
        id: upload-release-asset-deno
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.metadata.outputs.upload_url }}
          asset_path: ./deno-linux-arm64.zip
          asset_name: deno-linux-arm64.zip
          asset_content_type: application/zip
  build-docker:
    name: Build Docker images
    runs-on: ubuntu-latest
    needs: [ metadata, compile ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: VERSION=${{ needs.metadata.outputs.version }}
          tags: |
            deno911/deno:${{ needs.metadata.outputs.version }}
            deno911/deno:latest
